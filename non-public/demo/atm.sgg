.. repeat C{
   C -> A : auth;
   A -> B : authReq;                  .. C's authentication request forwarded to the bank
   sel B                              .. Decides about C's credential
   {
     B -> A : denied;
       A -> C : authFail
   +
     B -> A : granted;
     (
     sel C                            .. Once authentication is cleared, C can decide if to
       {
         C -> A : withdraw;           .. withdraw, or
             A -> B : authWithdrawal;
               sel B {
                 B -> A : allow;
                 A -> C : money
               +
                 B -> A : deny;
                   A -> C : bye;
                   (o) 
               }
      +
        C -> A : checkBalance;       .. check balance, or
          A -> B : getBalance;
	  B -> A : balance;
          A -> C : balance
      +
        C -> A : quit;               .. just quit
	A -> B : quit;
        (o)
      }
    )
   }
.. }
