# basename of the demo
DEMO = lisbon20

# emacs window title
TITLE = "demo@$(DEMO)"

# directory with the demo files...
DEMODIR = ~/emtalks/$(DEMO)/demo


# name of the application; used of suffix for the Erlang file generated by gg2erl
ATM = atm

demo:
#	emacs -T $(TITLE) --reverse --no-splash -mm ~/.emacs.d/sgg-mode.el $(ATM).sgg
	emacs -T "compiled graph" $(DEMO).erl
	make gg2erl
# #	make run_demo

setup:
	@echo $(DEMO)
	@echo $(TITLE)
	@echo $(DEMODIR)
	@echo $(ATM)

gg2erl:
	clear
	@echo "Compiling the global graph"
	@echo "python ~/choreography/chorgram/sgg.py -rg -df png --sloppy --dir $(DEMODIR) $(DEMODIR)/$(DEMO)_$(ATM).sgg"
	#
	# Setting up the Erlang scaffolding
	# aux.erl rgg_support.erl and gg2erl.erl must be copied in the DEMODIR directory
	#
	erlc aux.erl
	erlc rgg_support.erl
	erlc gg2erl.erl
	erlc $(DEMO).erl
	@echo "\t- Compiler ready"

run_demo:
	clear
	erl -eval '$(DEMO):main()' -s init stop
	@echo "\t- GG compiled into $(DEMO)_$(ATM).erl"
	erlc $(DEMO)_$(ATM).erl
	@echo "\t- $(DEMO)_$(ATM).erl compiled"
	@echo "\t- Ready to smurf"
	erl -eval '$(DEMO)_$(ATM):main()' -s init stop
	@echo "executing the erlang file"
	@echo "all done"
	make run_demo

clean:
# 	mv $(DEMODIR)/$(ATM) *~ dump
	rm -fr *.png *.dot $(DEMODIR)/$(ATM) *.beam *.dump *~
	ls $(DEMODIR)/*$(ATM).*


















### deprecated
# SGG = atm
# SGGTOERL = python ~/choreography/chorgram/sgg.py -rg -df png --sloppy --dir $(DEMODIR) $(DEMODIR)/$(SGG).sgg
# all:
#	$(SGGTOERL)
###
